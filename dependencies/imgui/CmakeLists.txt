cmake_minimum_required(VERSION 3.27)
project(imgui)

option(allegro5 "allegro5" off)
option(android_opengl3 "android_opengl3" off)
option(apple_metal "apple_metal" off)
option(apple_opengl2 "apple_opengl2" off)
option(emscripten_wgpu "emscripten_wgpu" off)
option(glfw_metal "glfw_metal" off)
option(glfw_opengl2 "glfw_opengl2" off)
option(glfw_opengl3 "glfw_opengl3" off)
option(glfw_vulcan "glfw_vulcan" off)
option(glut_opengl2 "glut_opengl2" off)
option(sdl2_directx11 "sdl2_directx11" off)
option(sdl2_metal "sdl2_metal" off)
option(sdl2_opengl2 "sdl2_opengl2" off)
option(sdl2_opengl3 "sdl2_opengl3" off)
option(sdl2_sdlrenderer2 "sdl2_sdlrenderer2" off)
option(sdl2_vulcan "sdl2_vulcan" off)
option(sdl3_opengl3 "sdl3_opengl3" off)
option(sdl3_sdlrenderer3 "sdl3_sdlrenderer3" off)
option(win32_directx9 "win32_directx9" off)
option(win32_directx10 "win32_directx10" off)
option(win32_directx11 "win32_directx11" off)
option(win32_directx12 "win32_directx12" off)
option(win32_opengl3 "win32_opengl3" off)
if(allegro5)

endif()
if(android_opengl3)

endif(apple_metal)
if()

endif()
if(apple_opengl2)

endif()
if(emscripten_wgpu)

endif()
if(glfw_metal)

endif()
if(glfw_opengl2)

endif()
if(glfw_opengl3)

endif()
if(glfw_vulcan)

endif()
if(glut_opengl2)

endif()
if(sdl2_directx11)

endif()
if(sdl2_metal)

endif()
if(sdl2_opengl2)

endif()
if(sdl2_opengl3)

endif()
if(sdl2_sdlrenderer2)

endif()
if(sdl2_vulcan)

endif()
if(sdl3_opengl3)

endif()
if(sdl3_sdlrenderer3)

endif()
if(win32_directx9)

endif()
if(win32_directx10)

endif()
if(win32_directx11)

endif()
if(win32_directx12)

endif()
if(win32_opengl3)

endif()
file(GLOB BASE_CPP imgui/*.cpp)
file(GLOB_RECURSE MISC_CPP imgui/misc/*.cpp)
add_library(imgui ${BASE_CPP} ${MISC_CPP} ${BACKEND_CPP})
target_include_directories(imgui PUBLIC ${INCLUDE})
